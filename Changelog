2018/06/28, 1.2.0-alpine-rc0 :
    - added --enable-muslfts configure option for support on alpine linux
201?/??/??, 1.1.0 :
    - fpart: options -D and -E now pack files if they are explicitly passed as
      arguments
    - fpsync: simplify and fix detection of remote URLs (fixes GH issue #2)
    - fpsync: implement simple ETA when displaying status
2017/11/10, 1.0.0 ('Dancing'):
    - fpart: update embedded fts(3) using FreeBSD 12-CURRENT's version
    - fpart: add option -E to pack directories instead of files
    - fpsync: add option -E to work with directories (enables rsync(1)'s --delete)
      That option finally enables fpsync(1) to parallelize the so-called final
      rsync(1) pass, needed to remove extra files with the --delete option!
      (of course it can also be used on a regular basis instead of the usual
      'file' mode: you will get a perfect mirror without needing any extra
      --delete pass)
    - fpart: add option -0 to end filenames with a null (\0) character when
      using option -o
    - fpsync: use fpart's new option -0 in conjunction with rsync's --from0 option
      to avoid failing on filenames with special characters
    - fpsync: improve documentation
2017/04/27, 0.9.3 ('Funny words'):
    - fpsync: add support for rsync URL as target
      Suggested and tested by Harry Mangalam. Thanks, Harry!
2015/02/19, 0.9.2 ('What's that?'):
    - fpsync: add option '-S' to use sudo(1) for filesystem crawling and synchronizations
    - fpsync: add option '-O' to override default fpart(1) options
    - add RPM .spec file (see the contribs/package/rpm directory)
2015/02/06, 0.9.1 ('Let's play together'):
    - add tools/fpsync: a tool to sync directories in parallel using fpart and
      rsync. See fpsync(1) for more details.
    - fpart: print the number of files found in verbose mode only
2013/11/13, 0.9-1:
    (this minor change only impacts tarball users, fpart code itself has not
    changed)
    - Backport the following patch to config.guess:
      http://git.savannah.gnu.org/gitweb/?p=config.git;a=commitdiff;h=29900d3bff1ce445087ece5cb2cac425df1c2f74
      it adds support for ppcle and ppc64le architectures.
    Submitted by: Madhu Pavan <kmp@linux.vnet.ibm.com>
2013/09/10, 0.9 ('I bite!'):
    - Code cleanup
    - Fix Debian bug #719338 (fix build on 32bit architectures)
2013/06/25, 0.8 ('Moving around'):
    - Keep environ(7) when forking hooks
    - Add sections about live mode and data migration in README
    - Use autotools and get rid of manual Makefiles
2013/02/18, 0.7 ('Can I take it ?'):
    - Added option -D to group leaf directories as single file entries
    - Big options and doc update/cleanup
    - Sync'd fts(3) code with current FreeBSD version (svn rev 245505)
    - Embedded fts(3) can now be used on GNU/Linux
    - Renamed option '-x' to '-b'
    - Added options '-y', '-Y', '-x' and '-X' to include or exclude files
2013/01/21, 0.6 ('Very funny'):
    - Options handling cleanup and various bugfixes
    - Added FPART_PID and FPART_HOOKTYPE hook variables
    - Added -z and -Z options to display empty directories
2013/01/09, 0.5 ('Cassounette'):
    - Added option '-L' (live mode)
    - Added options '-w' and '-W' (hooks to be used with live mode)
    - Fixed build on Solaris 9
    - Removed option '-m' and associated code
2012/06/12, 0.4:
    - Now builds on Solaris (using FreeBSD's fts(3))
    - Fix stack overflow when allocating file entry pointers' array
    - Added preloading/rounding options -p, -q and -r. See fpart(1)
    - Added more verbose messages (option '-v')
    - Better error handling when unable to add file entries (mostly when
      running out of memory)
    - Verbose mode now accepts several levels
    - Added option '-m' (disabled by default), that tries to lower physical
      memory usage (at least during FS crawling) by using temporary file(s)
      and mmap(2) facility
2011/12/06, 0.3:
    - Switch to fts(3)
    - Replaced getline(3) calls with fgets(3) for compatibility
    - New "handle arbitrary values" (-a) option
    - Strings handling cleanup (stop using FILENAME_MAX)
    - Various smaller changes
2011/11/24, 0.2:
    - New "follow symbolic links" (-l) option
    - Ending slash (if present in input path) is now left to allow following an
      initial symbolic link (without using option -l)
    - New "do not cross file system boundaries" (-x) option
    - Fpart now reads on stdin by default if no path is given
    - File size are now written to stdout when displaying partition contents
    - Various smaller changes
2011/11/18, 0.1:
    - Initial version
